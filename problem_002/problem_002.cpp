/*
Worked on by HFW
Project Euler
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

#include <iostream>
#include <math.h>

long solution_1()
{
  long sum = 0;
  long fibA = 0, fibB = 1, temp = 0;

  while(fibB < 4000000)
  {

    if(fibB % 2 == 0)
    {
      sum += fibB;
    }

    temp = fibA + fibB;
    fibA = fibB;
    fibB = temp;
  }

  return sum;
}

int main()
{
  std::cout << "Output of solution_one: " << solution_1()<< '\n';
}
